{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Bold;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red155\green35\blue147;\red255\green255\blue255;\red0\green0\blue0;
\red15\green104\blue160;\red57\green0\blue160;\red50\green109\blue116;\red108\green54\blue169;\red28\green0\blue207;
\red196\green26\blue22;\red93\green108\blue121;\red28\green70\blue74;}
{\*\expandedcolortbl;;\csgenericrgb\c60759\c13753\c57628;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c0\c0\c0\c85000;
\csgenericrgb\c5882\c40784\c62745;\csgenericrgb\c22454\c0\c62803;\csgenericrgb\c19418\c42935\c45455;\csgenericrgb\c42190\c21278\c66379;\csgenericrgb\c11000\c0\c81000;
\csgenericrgb\c77000\c10200\c8600;\csgenericrgb\c36526\c42188\c47515;\csgenericrgb\c10981\c27276\c28869;}
\paperw11900\paperh16840\margl1440\margr1440\vieww14180\viewh14400\viewkind0
\deftab593
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f0\b\fs24 \cf2 \cb3 @IBAction
\f1\b0 \cf4  
\f0\b \cf2 func
\f1\b0 \cf4  \cf5 btnScanCode\cf4 (\cf5 _\cf4  sender: 
\f0\b \cf2 Any
\f1\b0 \cf4 ) \{\
        \
        
\f0\b \cf2 let
\f1\b0 \cf4  btc = \cf6 Double\cf4 (\cf7 getbtcamount\cf4 )\
        \cf8 print\cf4 (btc!)\
        
\f0\b \cf2 if
\f1\b0 \cf4 (btc! > \cf9 0\cf4 )\
        \{\
            \
        
\f0\b \cf2 self
\f1\b0 \cf4 .\cf7 strTxnType\cf4  = \cf10 "SEND"\cf4 \
        
\f0\b \cf2 guard
\f1\b0 \cf4  \cf7 checkScanPermissions\cf4 () 
\f0\b \cf2 else
\f1\b0 \cf4  \{ 
\f0\b \cf2 return
\f1\b0 \cf4  \}\
        \cf7 readerVC\cf4 .\cf8 modalPresentationStyle\cf4  = .\cf8 formSheet\cf4 \
        \cf7 readerVC\cf4 .\cf7 delegate\cf4  = 
\f0\b \cf2 self
\f1\b0 \cf4 \
       \cf11 // readerVC.delegate = self as? QRCodeReaderViewControllerDelegate\cf4 \
        \cf7 readerVC\cf4 .\cf7 completionBlock\cf4  = \{ (result: \cf12 QRCodeReaderResult\cf4 ?) 
\f0\b \cf2 in
\f1\b0 \cf4 \
            
\f0\b \cf2 if
\f1\b0 \cf4  
\f0\b \cf2 let
\f1\b0 \cf4  result = result \{\
                \cf8 print\cf4 (\cf10 "Completion with result: \cf4 \\(result.\cf7 value\cf4 )\cf10  of type \cf4 \\(result.\cf7 metadataType\cf4 )\cf10 "\cf4 )\
                
\f0\b \cf2 var
\f1\b0 \cf4  str_Amount : \cf6 String\cf4  = \cf10 ""\cf4 \
                
\f0\b \cf2 let
\f1\b0 \cf4  myString: \cf6 String\cf4  = result.\cf7 value\cf4 \
                
\f0\b \cf2 var
\f1\b0 \cf4  myStringArr = myString.\cf8 components\cf4 (\cf8 separatedBy\cf4 : \cf10 "?amount="\cf4 )\
                
\f0\b \cf2 if
\f1\b0 \cf4  myStringArr.\cf8 count\cf4  > \cf9 1\cf4  \{\
                    str_Amount = myStringArr[\cf9 1\cf4 ]\
                    
\f0\b \cf2 let
\f1\b0 \cf4  myStringArr2 = myStringArr[\cf9 0\cf4 ].\cf8 components\cf4 (\cf8 separatedBy\cf4 : \cf10 "bitcoin:"\cf4 )\
                    
\f0\b \cf2 if
\f1\b0 \cf4   myStringArr2.\cf8 count\cf4  > \cf9 1\cf4 \
                    \{\
                       myStringArr[\cf9 0\cf4 ] = myStringArr2[\cf9 1\cf4 ]\
                    \}\
                \}\
                
\f0\b \cf2 else
\f1\b0 \cf4  \{\
                    
\f0\b \cf2 let
\f1\b0 \cf4  myStringArr1 = myStringArr[\cf9 0\cf4 ].\cf8 components\cf4 (\cf8 separatedBy\cf4 : \cf10 "bitcoin:"\cf4 )\
                    
\f0\b \cf2 if
\f1\b0 \cf4  myStringArr1.\cf8 count\cf4  > \cf9 1\cf4   \{\
                         myStringArr[\cf9 0\cf4 ] = myStringArr1[\cf9 1\cf4 ]\
                    \}\
                \}\
                
\f0\b \cf2 if
\f1\b0 \cf4  myStringArr[\cf9 0\cf4 ].count > \cf9 45\cf4  || myStringArr[\cf9 0\cf4 ].count  < \cf9 26\cf4 \
                \{                   \
                     myStringArr[\cf9 0\cf4 ] = \cf10 ""\cf4 \
                    \
                    \cf7 showCommonAlertMesage\cf4 (\cf7 title\cf4 : \cf10 "Alert"\cf4 , \cf7 message\cf4 : \cf10 "Invalid Address"\cf4 , \cf7 vc\cf4 : 
\f0\b \cf2 self
\f1\b0 \cf4 )\
                    \
                \}\
\
                
\f0\b \cf2 self
\f1\b0 \cf4 .\cf7 texttowalletaddress\cf4 .\cf7 text\cf4 !=myStringArr[\cf9 0\cf4 ]\
                
\f0\b \cf2 self
\f1\b0 \cf4 .\cf7 textbtcamt\cf4 .\cf7 text\cf4 ! = str_Amount\
                \cf11 //self.lblInvalidAddress.text = ""\cf4 \
                
\f0\b \cf2 do
\f1\b0 \cf4 \{\
                    
\f0\b \cf2 let
\f1\b0 \cf4  btc = \cf6 Double\cf4 (
\f0\b \cf2 self
\f1\b0 \cf4 .
\f0\b \cf2 self
\f1\b0 \cf4 .\cf7 textbtcamt\cf4 .\cf7 text\cf4 !)\
                    
\f0\b \cf2 if
\f1\b0 \cf4  btc != 
\f0\b \cf2 nil
\f1\b0 \cf4  \{\
                        
\f0\b \cf2 let
\f1\b0 \cf4  result = btc! * \cf12 Config\cf4 .\cf7 currentUSDprice\cf4 \
                         
\f0\b \cf2 let
\f1\b0 \cf4  amount = \cf6 String\cf4 (\cf6 describing\cf4 : result.\cf7 formattedAsLocalCurrency1\cf4 )\
                        \
                        
\f0\b \cf2 var
\f1\b0 \cf4  finalString : \cf6 String\cf4  = \cf10 ""\cf4 \
                        
\f0\b \cf2 if
\f1\b0 \cf4  amount.\cf8 contains\cf4 (\cf10 "$"\cf4 )\
                        \{\
                            
\f0\b \cf2 var
\f1\b0 \cf4  myStringArr = amount.\cf8 components\cf4 (\cf8 separatedBy\cf4 : \cf10 "$"\cf4 )\
                            \cf8 print\cf4 (amount)\
                            \
                            \cf11 // var hello: String = myStringArr [0]\cf4 \
                            finalString = myStringArr [\cf9 1\cf4 ]\
                            \
                        \}\
                        \
                         
\f0\b \cf2 self
\f1\b0 \cf4 .\cf7 textdollaramt\cf4 .\cf7 text\cf4  = finalString\
                        \
                    \}
\f0\b \cf2 else
\f1\b0 \cf4 \{\
                        
\f0\b \cf2 self
\f1\b0 \cf4 .\cf7 textbtcamt\cf4 .\cf7 text\cf4  = \cf10 ""\cf4 \
                        
\f0\b \cf2 self
\f1\b0 \cf4 .\cf7 textdollaramt\cf4 .\cf7 text\cf4  = \cf10 ""\cf4 \
                    \}\
                    \
                \}
\f0\b \cf2 catch
\f1\b0 \cf4  
\f0\b \cf2 let
\f1\b0 \cf4  \cf8 error\cf4  \{\
                    \cf8 print\cf4 (\cf8 error\cf4 .\cf8 localizedDescription\cf4 )\
                \}\
            \}\
        \}\
        \cf8 present\cf4 (\cf7 readerVC\cf4 , \cf8 animated\cf4 : 
\f0\b \cf2 true
\f1\b0 \cf4 , \cf8 completion\cf4 : 
\f0\b \cf2 nil
\f1\b0 \cf4 )\
    \}\
        
\f0\b \cf2 else
\f1\b0 \cf4 \{\
            \cf7 showCommonAlertMesage\cf4 (\cf7 title\cf4 : \cf10 "Alert"\cf4 , \cf7 message\cf4 : \cf12 Config\cf4 .\cf7 balanceAlert\cf4 , \cf7 vc\cf4 : 
\f0\b \cf2 self
\f1\b0 \cf4 )\
        \}\
    \}\
\
\
\
\
\

\f0\b \cf2 func
\f1\b0 \cf4  \cf5 reader\cf4 (\cf5 _\cf4  reader: \cf12 QRCodeReaderViewController\cf4 , \cf5 didScanResult\cf4  result: \cf12 QRCodeReaderResult\cf4 ) \{\
        reader.\cf7 stopScanning\cf4 ()\
        \
        \cf8 dismiss\cf4 (\cf8 animated\cf4 : 
\f0\b \cf2 true
\f1\b0 \cf4 , \cf8 completion\cf4 : 
\f0\b \cf2 nil
\f1\b0 \cf4 )\
       \cf11 /* dismiss(animated: true) \{ [weak self] in\cf4 \
\cf11             let alert = UIAlertController(\cf4 \
\cf11                 title: "QRCodeReader",\cf4 \
\cf11                 message: String (format:"%@ (of type %@)", result.value, result.metadataType),\cf4 \
\cf11                 preferredStyle: .alert\cf4 \
\cf11             )\cf4 \
\cf11             alert.addAction(UIAlertAction(title: "OK", style: .cancel, handler: nil))\cf4 \
\cf11             \cf4 \
\cf11             //self?.present(alert, animated: true, completion: nil)\cf4 \
\cf11  \cf4 \
\cf11         \}\cf4 \
\cf11  */\cf4 \
    \}\
    \
    
\f0\b \cf2 func
\f1\b0 \cf4  \cf5 reader\cf4 (\cf5 _\cf4  reader: \cf12 QRCodeReaderViewController\cf4 , \cf5 didSwitchCamera\cf4  newCaptureDevice: \cf6 AVCaptureDeviceInput\cf4 ) \{\
        \cf8 print\cf4 (\cf10 "Switching capturing to: \cf4 \\(newCaptureDevice.\cf8 device\cf4 .\cf8 localizedName\cf4 )\cf10 "\cf4 )\
    \}\
    \
    
\f0\b \cf2 func
\f1\b0 \cf4  \cf5 readerDidCancel\cf4 (\cf5 _\cf4  reader: \cf12 QRCodeReaderViewController\cf4 ) \{\
        reader.\cf7 stopScanning\cf4 ()\
        \cf8 dismiss\cf4 (\cf8 animated\cf4 : 
\f0\b \cf2 true
\f1\b0 \cf4 , \cf8 completion\cf4 : 
\f0\b \cf2 nil
\f1\b0 \cf4 )\
    \}}